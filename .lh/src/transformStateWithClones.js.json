{
    "sourceFile": "src/transformStateWithClones.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 92,
            "patches": [
                {
                    "date": 1708343162693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708343188534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,19 +5,9 @@\n  * @param {Object[]} actions\n  *\n  * @return {Object[]}\n  */\n-function transformState(state, actions) {\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(state, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete state[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      state = {};\n-    }\n-  }\n+function transformStateWithClones(state, actions) {\n+  // write code here\n }\n \n module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708343193717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,18 @@\n  *\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n-  // write code here\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(state, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete state[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      state = {};\n+    }\n+  }\n }\n \n module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708343343168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n       for (const key of action.keysToRemove) {\n         delete state[key];\n       }\n     } else if (action.type === 'clear') {\n+      const state\n       state = {};\n     }\n   }\n }\n"
                },
                {
                    "date": 1708343348191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n       for (const key of action.keysToRemove) {\n         delete state[key];\n       }\n     } else if (action.type === 'clear') {\n-      const state\n+      const stateClone = state;\n       state = {};\n     }\n   }\n }\n"
                },
                {
                    "date": 1708343355314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(state, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete state[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const stateClone = state;\n+    }\n+  }\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708343461636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,24 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(state, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete state[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const stateClone = state;\n+      state = state\n+    }\n+  }\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708343494167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,58 +14,10 @@\n       for (const key of action.keysToRemove) {\n         delete state[key];\n       }\n     } else if (action.type === 'clear') {\n-      const stateClone = state;\n-      state = state\n+      delete state;\n     }\n   }\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(state, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete state[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      const stateClone = state;\n-    }\n-  }\n-}\n-\n-module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(state, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete state[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      const stateClone = state;\n-      state = {};\n-    }\n-  }\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708343512271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n       for (const key of action.keysToRemove) {\n         delete state[key];\n       }\n     } else if (action.type === 'clear') {\n-      delete state;\n+      state = {};\n     }\n   }\n }\n \n"
                },
                {
                    "date": 1708344117034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(state, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete state[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      delete state;\n+    }\n+  }\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708344123459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-'use strict';\n+// 'use strict';\n \n /**\n  * @param {Object} state\n  * @param {Object[]} actions\n@@ -20,27 +20,4 @@\n   }\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(state, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete state[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      state = {};\n-    }\n-  }\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708344138236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-// 'use strict';\n+'use strict';\n \n /**\n  * @param {Object} state\n  * @param {Object[]} actions\n"
                },
                {
                    "date": 1708345093349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(state, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete state[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(state);\n+\n+      for (const key of keys) {\n+        delete state[key];\n+      }\n+    }\n+  }\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708345132971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n  * @param {Object[]} actions\n  *\n  * @return {Object[]}\n  */\n-function transformStateWithClones(state, actions) {\n+function transformState(state, actions) {\n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(state, action.extraData);\n     } else if (action.type === 'removeProperties') {\n@@ -24,27 +24,4 @@\n   }\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(state, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete state[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      delete state;\n-    }\n-  }\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708345168484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n  * @param {Object[]} actions\n  *\n  * @return {Object[]}\n  */\n-function transformState(state, actions) {\n+function transformStateWithClones(state, actions) {\n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(state, action.extraData);\n     } else if (action.type === 'removeProperties') {\n"
                },
                {
                    "date": 1708345512563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(state, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete state[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(state);\n+\n+      for (const key of keys) {\n+        delete state[key];\n+      }\n+    }\n+  }\n+\n+  return [state;\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708345578761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(state, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete state[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(state);\n+\n+      for (const key of keys) {\n+        delete state[key];\n+      }\n+    }\n+  }\n+\n+  return keys;\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708345589704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,65 +21,7 @@\n         delete state[key];\n       }\n     }\n   }\n-\n-  return keys;\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(state, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete state[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(state);\n-\n-      for (const key of keys) {\n-        delete state[key];\n-      }\n-    }\n-  }\n-\n-  return [state;\n-}\n-\n-module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(state, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete state[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(state);\n-\n-      for (const key of keys) {\n-        delete state[key];\n-      }\n-    }\n-  }\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708345713113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(state, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete state[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(state);\n+\n+      for (const key of keys) {\n+        delete state[key];\n+      }\n+    }\n+  }\n+  return state;\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708345752715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,35 +21,9 @@\n         delete state[key];\n       }\n     }\n   }\n-  return state;\n-}\n \n-module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(state, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete state[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(state);\n-\n-      for (const key of keys) {\n-        delete state[key];\n-      }\n-    }\n-  }\n+  return ...state;\n }\n \n module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708345758370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(state, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete state[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(state);\n+\n+      for (const key of keys) {\n+        delete state[key];\n+      }\n+    }\n+  }\n+\n+  return []...state];\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708345778566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,37 +22,8 @@\n       }\n     }\n   }\n \n-  return []...state];\n+  return state;\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(state, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete state[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(state);\n-\n-      for (const key of keys) {\n-        delete state[key];\n-      }\n-    }\n-  }\n-\n-  return ...state;\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708346200491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  \n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(state, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete state[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(state);\n+\n+      for (const key of keys) {\n+        delete state[key];\n+      }\n+    }\n+  }\n+\n+  return state;\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708346206582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n  *\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n-  \n+  const stateClone = state\n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(state, action.extraData);\n     } else if (action.type === 'removeProperties') {\n@@ -27,33 +27,4 @@\n   return state;\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(state, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete state[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(state);\n-\n-      for (const key of keys) {\n-        delete state[key];\n-      }\n-    }\n-  }\n-\n-  return state;\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708346232823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n  *\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n-  const stateClone = state\n+  const stateClone = Objec;\n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(state, action.extraData);\n     } else if (action.type === 'removeProperties') {\n"
                },
                {
                    "date": 1708346242103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n  *\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n-  const stateClone = Objec;\n+  const stateClone = Object.assign({});\n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(state, action.extraData);\n     } else if (action.type === 'removeProperties') {\n"
                },
                {
                    "date": 1708346256326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,12 +6,12 @@\n  *\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n-  const stateClone = Object.assign({});\n+  const stateClone = Object.assign({}, state);\n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n-      Object.assign(state, action.extraData);\n+      Object.assign(stateClone, action.extraData);\n     } else if (action.type === 'removeProperties') {\n       for (const key of action.keysToRemove) {\n         delete state[key];\n       }\n"
                },
                {
                    "date": 1708346263707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n     } else if (action.type === 'removeProperties') {\n       for (const key of action.keysToRemove) {\n-        delete state[key];\n+        delete stateClone[key];\n       }\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(state);\n \n"
                },
                {
                    "date": 1708346274549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n       for (const key of action.keysToRemove) {\n         delete stateClone[key];\n       }\n     } else if (action.type === 'clear') {\n-      const keys = Object.keys(state);\n+      const keys = Object.keys(stateClone);\n \n       for (const key of keys) {\n         delete state[key];\n       }\n"
                },
                {
                    "date": 1708346282659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,13 +18,13 @@\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n       for (const key of keys) {\n-        delete state[key];\n+        delete stateClone[key];\n       }\n     }\n   }\n \n-  return state;\n+  return stateClone;\n }\n \n module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708346812554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n   const stateClone = Object.assign({}, state);\n+\n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n     } else if (action.type === 'removeProperties') {\n@@ -23,8 +24,8 @@\n       }\n     }\n   }\n \n-  return stateClone;\n+  return arr = ;\n }\n \n module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708346819686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  const stateClone = Object.assign({}, state);\n+\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(stateClone, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete stateClone[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(stateClone);\n+\n+      for (const key of keys) {\n+        delete stateClone[key];\n+      }\n+    }\n+  }\n+\n+  return arr = Array.from();\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708346826303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  const stateClone = Object.assign({}, state);\n+\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(stateClone, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete stateClone[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(stateClone);\n+\n+      for (const key of keys) {\n+        delete stateClone[key];\n+      }\n+    }\n+  }\n+\n+  return arr = Array.from(Object.entreies);\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708346832974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  const stateClone = Object.assign({}, state);\n+\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(stateClone, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete stateClone[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(stateClone);\n+\n+      for (const key of keys) {\n+        delete stateClone[key];\n+      }\n+    }\n+  }\n+\n+  return arr = Array.from(Object.entries());\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708346841385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,101 +24,8 @@\n       }\n     }\n   }\n \n-  return arr = Array.from(Object.entries());\n+  return arr = Array.from(Object.entries(stateClone));\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  const stateClone = Object.assign({}, state);\n-\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(stateClone, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete stateClone[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n-\n-      for (const key of keys) {\n-        delete stateClone[key];\n-      }\n-    }\n-  }\n-\n-  return arr = Array.from(Object.entreies);\n-}\n-\n-module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  const stateClone = Object.assign({}, state);\n-\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(stateClone, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete stateClone[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n-\n-      for (const key of keys) {\n-        delete stateClone[key];\n-      }\n-    }\n-  }\n-\n-  return arr = Array.from();\n-}\n-\n-module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  const stateClone = Object.assign({}, state);\n-\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(stateClone, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete stateClone[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n-\n-      for (const key of keys) {\n-        delete stateClone[key];\n-      }\n-    }\n-  }\n-\n-  return arr = ;\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708346862264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         delete stateClone[key];\n       }\n     }\n   }\n-\n+  const arr = \n   return arr = Array.from(Object.entries(stateClone));\n }\n \n module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708346981529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         delete stateClone[key];\n       }\n     }\n   }\n-  const arr = \n-  return arr = Array.from(Object.entries(stateClone));\n+\n+  return arr;\n }\n \n module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708347008858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,8 @@\n       }\n     }\n   }\n \n-  return arr;\n+  return [stateClone];\n }\n \n module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708355746271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,10 @@\n  *\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n+  \n+\n   const stateClone = Object.assign({}, state);\n \n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n"
                },
                {
                    "date": 1708355753956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n  *\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n-  \n+  const \n \n   const stateClone = Object.assign({}, state);\n \n   for (const action of actions) {\n"
                },
                {
                    "date": 1708355760028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n  *\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n-  const \n+  const history = {}\n \n   const stateClone = Object.assign({}, state);\n \n   for (const action of actions) {\n"
                },
                {
                    "date": 1708355766632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n  *\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n-  const history = {}\n+  const history = []\n \n   const stateClone = Object.assign({}, state);\n \n   for (const action of actions) {\n"
                },
                {
                    "date": 1708355784355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n  *\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n-  const history = []\n+  const history = [];\n \n   const stateClone = Object.assign({}, state);\n \n   for (const action of actions) {\n@@ -23,8 +23,9 @@\n \n       for (const key of keys) {\n         delete stateClone[key];\n       }\n+      \n     }\n   }\n \n   return [stateClone];\n"
                },
                {
                    "date": 1708355803778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  const history = [];\n+\n+  const stateClone = Object.assign({}, state);\n+\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(stateClone, action.extraData);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete stateClone[key];\n+      }\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(stateClone);\n+\n+      for (const key of keys) {\n+        delete stateClone[key];\n+      }\n+      history.push(stateClone)\n+    }\n+  }\n+\n+  return [stateClone];\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708355856670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n  */\n function transformStateWithClones(state, actions) {\n   const history = [];\n \n-  const stateClone = Object.assign({}, state);\n \n-  for (const action of actions) {\n+  for (const action of actions) {  const stateClone = Object.assign({}, state);\n+\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n     } else if (action.type === 'removeProperties') {\n       for (const key of action.keysToRemove) {\n@@ -31,38 +31,4 @@\n   return [stateClone];\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  const history = [];\n-\n-  const stateClone = Object.assign({}, state);\n-\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(stateClone, action.extraData);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete stateClone[key];\n-      }\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n-\n-      for (const key of keys) {\n-        delete stateClone[key];\n-      }\n-      \n-    }\n-  }\n-\n-  return [stateClone];\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708355866311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n function transformStateWithClones(state, actions) {\n   const history = [];\n \n \n-  for (const action of actions) {  const stateClone = Object.assign({}, state);\n-\n+  for (const action of actions) {\n+    const stateClone = Object.assign({}, state);\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n     } else if (action.type === 'removeProperties') {\n       for (const key of action.keysToRemove) {\n@@ -23,9 +23,9 @@\n \n       for (const key of keys) {\n         delete stateClone[key];\n       }\n-      history.push(stateClone)\n+      history.push(stateClone);\n     }\n   }\n \n   return [stateClone];\n"
                },
                {
                    "date": 1708355878775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n     } else if (action.type === 'removeProperties') {\n       for (const key of action.keysToRemove) {\n         delete stateClone[key];\n       }\n+      history.push(stateClone);\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n       for (const key of keys) {\n"
                },
                {
                    "date": 1708355884572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n   for (const action of actions) {\n     const stateClone = Object.assign({}, state);\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n+      history.push(stateClone);\n     } else if (action.type === 'removeProperties') {\n       for (const key of action.keysToRemove) {\n         delete stateClone[key];\n       }\n@@ -28,8 +29,8 @@\n       history.push(stateClone);\n     }\n   }\n \n-  return [stateClone];\n+  return [history];\n }\n \n module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708355891401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function transformStateWithClones(state, actions) {\n+  const history = [];\n+\n+\n+  for (const action of actions) {\n+    const stateClone = Object.assign({}, state);\n+    if (action.type === 'addProperties') {\n+      Object.assign(stateClone, action.extraData);\n+      history.push(stateClone);\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete stateClone[key];\n+      }\n+      history.push(stateClone);\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(stateClone);\n+\n+      for (const key of keys) {\n+        delete stateClone[key];\n+      }\n+      history.push(stateClone);\n+    }\n+  }\n+\n+  return [history;\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708356059848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,48 +7,12 @@\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n   const history = [];\n-\n-\n+    const stateClone = Object.assign({}, state);\n   for (const action of actions) {\n-    const stateClone = Object.assign({}, state);\n-    if (action.type === 'addProperties') {\n-      Object.assign(stateClone, action.extraData);\n-      history.push(stateClone);\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete stateClone[key];\n-      }\n-      history.push(stateClone);\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n \n-      for (const key of keys) {\n-        delete stateClone[key];\n-      }\n-      history.push(stateClone);\n-    }\n-  }\n \n-  return [history;\n-}\n-\n-module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function transformStateWithClones(state, actions) {\n-  const history = [];\n-\n-\n-  for (const action of actions) {\n-    const stateClone = Object.assign({}, state);\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push(stateClone);\n     } else if (action.type === 'removeProperties') {\n@@ -65,8 +29,8 @@\n       history.push(stateClone);\n     }\n   }\n \n-  return [history];\n+  return history;\n }\n \n module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708356084373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,14 @@\n  * @return {Object[]}\n  */\n function transformStateWithClones(state, actions) {\n   const history = [];\n-    const stateClone = Object.assign({}, state);\n+  const stateClone = Object.assign({}, state);\n+\n   for (const action of actions) {\n-\n-\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n-      history.push(stateClone);\n+      history.push({stateClone);\n     } else if (action.type === 'removeProperties') {\n       for (const key of action.keysToRemove) {\n         delete stateClone[key];\n       }\n"
                },
                {
                    "date": 1708356089798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n-      history.push({stateClone);\n+      history.push({...stateClone});\n     } else if (action.type === 'removeProperties') {\n       for (const key of action.keysToRemove) {\n         delete stateClone[key];\n       }\n"
                },
                {
                    "date": 1708356099908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n-      history.push({...stateClone});\n+      history.push(...stateClone});\n     } else if (action.type === 'removeProperties') {\n       for (const key of action.keysToRemove) {\n         delete stateClone[key];\n       }\n"
                },
                {
                    "date": 1708356118207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,21 +12,21 @@\n \n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n-      history.push(...stateClone});\n+      history.push({...stateClone});\n     } else if (action.type === 'removeProperties') {\n       for (const key of action.keysToRemove) {\n         delete stateClone[key];\n       }\n-      history.push(stateClone);\n+      history.push({...stateClone});\n     } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n+      const keys = Object.keys({...stateClone});\n \n       for (const key of keys) {\n         delete stateClone[key];\n       }\n-      history.push(stateClone);\n+      history.push({...stateClone});\n     }\n   }\n \n   return history;\n"
                },
                {
                    "date": 1708356129910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         delete stateClone[key];\n       }\n       history.push({...stateClone});\n     } else if (action.type === 'clear') {\n-      const keys = Object.keys({...stateClone});\n+      const keys = Object.keys(stateClone);\n \n       for (const key of keys) {\n         delete stateClone[key];\n       }\n"
                },
                {
                    "date": 1708357768132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,28 +5,29 @@\n  * @param {Object[]} actions\n  *\n  * @return {Object[]}\n  */\n+function iterate ()\n function transformStateWithClones(state, actions) {\n   const history = [];\n   const stateClone = Object.assign({}, state);\n \n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n-      history.push({...stateClone});\n+      history.push({ ...stateClone });\n     } else if (action.type === 'removeProperties') {\n       for (const key of action.keysToRemove) {\n         delete stateClone[key];\n       }\n-      history.push({...stateClone});\n+      history.push({ ...stateClone });\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n       for (const key of keys) {\n         delete stateClone[key];\n       }\n-      history.push({...stateClone});\n+      history.push({ ...stateClone });\n     }\n   }\n \n   return history;\n"
                },
                {
                    "date": 1708357776315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,11 @@\n  * @param {Object[]} actions\n  *\n  * @return {Object[]}\n  */\n-function iterate ()\n+function iterate (arr) {\n+  \n+}\n function transformStateWithClones(state, actions) {\n   const history = [];\n   const stateClone = Object.assign({}, state);\n \n"
                },
                {
                    "date": 1708357788490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n  *\n  * @return {Object[]}\n  */\n function iterate (arr) {\n-  \n+  for (const key of arr)\n }\n function transformStateWithClones(state, actions) {\n   const history = [];\n   const stateClone = Object.assign({}, state);\n"
                },
                {
                    "date": 1708357796504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,40 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function iterate (arr) {\n+  for (const key of arr) {\n+    delete stateClone\n+  }\n+}\n+function transformStateWithClones(state, actions) {\n+  const history = [];\n+  const stateClone = Object.assign({}, state);\n+\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(stateClone, action.extraData);\n+      history.push({ ...stateClone });\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete stateClone[key];\n+      }\n+      history.push({ ...stateClone });\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(stateClone);\n+\n+      for (const key of keys) {\n+        delete stateClone[key];\n+      }\n+      history.push({ ...stateClone });\n+    }\n+  }\n+\n+  return history;\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708357808670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n  * @return {Object[]}\n  */\n function iterate (arr) {\n   for (const key of arr) {\n-    delete stateClone\n+    delete stateClone[key]\n   }\n }\n function transformStateWithClones(state, actions) {\n   const history = [];\n@@ -19,11 +19,9 @@\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n     } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete stateClone[key];\n-      }\n+      iterate()\n       history.push({ ...stateClone });\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n@@ -37,42 +35,4 @@\n   return history;\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-function iterate (arr) {\n-  for (const key of arr)\n-}\n-function transformStateWithClones(state, actions) {\n-  const history = [];\n-  const stateClone = Object.assign({}, state);\n-\n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(stateClone, action.extraData);\n-      history.push({ ...stateClone });\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete stateClone[key];\n-      }\n-      history.push({ ...stateClone });\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n-\n-      for (const key of keys) {\n-        delete stateClone[key];\n-      }\n-      history.push({ ...stateClone });\n-    }\n-  }\n-\n-  return history;\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708357815555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,16 +19,14 @@\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n     } else if (action.type === 'removeProperties') {\n-      iterate()\n+      iterate();\n       history.push({ ...stateClone });\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n-      for (const key of keys) {\n-        delete stateClone[key];\n-      }\n+      iterate();\n       history.push({ ...stateClone });\n     }\n   }\n \n"
                },
                {
                    "date": 1708357835333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,18 @@\n  * @param {Object[]} actions\n  *\n  * @return {Object[]}\n  */\n-function iterate (arr) {\n+\n+\n+function transformStateWithClones(state, actions) {\n+  const history = [];\n+  const stateClone = Object.assign({}, state);\n+function iterate(arr) {\n   for (const key of arr) {\n-    delete stateClone[key]\n+    delete stateClone[key];\n   }\n }\n-function transformStateWithClones(state, actions) {\n-  const history = [];\n-  const stateClone = Object.assign({}, state);\n-\n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n"
                },
                {
                    "date": 1708357848147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,13 +10,13 @@\n \n function transformStateWithClones(state, actions) {\n   const history = [];\n   const stateClone = Object.assign({}, state);\n-function iterate(arr) {\n-  for (const key of arr) {\n-    delete stateClone[key];\n+  function iterate(arr) {\n+    for (const key of arr) {\n+      delete stateClone[key];\n+    }\n   }\n-}\n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n"
                },
                {
                    "date": 1708357861729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,29 +5,30 @@\n  * @param {Object[]} actions\n  *\n  * @return {Object[]}\n  */\n-\n-\n+function iterate (arr) {\n+  for (const key of arr) {\n+    delete stateClone[key]\n+  }\n+}\n function transformStateWithClones(state, actions) {\n   const history = [];\n   const stateClone = Object.assign({}, state);\n-  function iterate(arr) {\n-    for (const key of arr) {\n-      delete stateClone[key];\n-    }\n-  }\n+\n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n     } else if (action.type === 'removeProperties') {\n-      iterate();\n+      iterate()\n       history.push({ ...stateClone });\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n-      iterate();\n+      for (const key of keys) {\n+        delete stateClone[key];\n+      }\n       history.push({ ...stateClone });\n     }\n   }\n \n"
                },
                {
                    "date": 1708357870874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,16 +19,14 @@\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n     } else if (action.type === 'removeProperties') {\n-      iterate()\n+      iterate();\n       history.push({ ...stateClone });\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n-      for (const key of keys) {\n-        delete stateClone[key];\n-      }\n+      iterate\n       history.push({ ...stateClone });\n     }\n   }\n \n"
                },
                {
                    "date": 1708357877634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n       history.push({ ...stateClone });\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n-      iterate\n+      iterate(keys);\n       history.push({ ...stateClone });\n     }\n   }\n \n"
                },
                {
                    "date": 1708357891391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,16 +5,17 @@\n  * @param {Object[]} actions\n  *\n  * @return {Object[]}\n  */\n-function iterate (arr) {\n-  for (const key of arr) {\n-    delete stateClone[key]\n-  }\n-}\n+\n function transformStateWithClones(state, actions) {\n   const history = [];\n   const stateClone = Object.assign({}, state);\n+  function iterate(arr) {\n+    for (const key of arr) {\n+      delete stateClone[key];\n+    }\n+  }\n \n   for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n"
                },
                {
                    "date": 1708357916747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n \n function transformStateWithClones(state, actions) {\n   const history = [];\n   const stateClone = Object.assign({}, state);\n+\n   function iterate(arr) {\n     for (const key of arr) {\n       delete stateClone[key];\n     }\n@@ -20,9 +21,9 @@\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n     } else if (action.type === 'removeProperties') {\n-      iterate();\n+      iterate(stateClone);\n       history.push({ ...stateClone });\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n"
                },
                {
                    "date": 1708357930981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,40 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+function iterate (arr) {\n+  for (const key of arr) {\n+    delete stateClone[key]\n+  }\n+}\n+function transformStateWithClones(state, actions) {\n+  const history = [];\n+  const stateClone = Object.assign({}, state);\n+\n+  for (const action of actions) {\n+    if (action.type === 'addProperties') {\n+      Object.assign(stateClone, action.extraData);\n+      history.push({ ...stateClone });\n+    } else if (action.type === 'removeProperties') {\n+      for (const key of action.keysToRemove) {\n+        delete stateClone[key];\n+      }\n+      history.push({ ...stateClone });\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(stateClone);\n+\n+      for (const key of keys) {\n+        delete stateClone[key];\n+      }\n+      history.push({ ...stateClone });\n+    }\n+  }\n+\n+  return history;\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708357940568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,49 +5,9 @@\n  * @param {Object[]} actions\n  *\n  * @return {Object[]}\n  */\n-function iterate (arr) {\n-  for (const key of arr) {\n-    delete stateClone[key]\n-  }\n-}\n-function transformStateWithClones(state, actions) {\n-  const history = [];\n-  const stateClone = Object.assign({}, state);\n \n-  for (const action of actions) {\n-    if (action.type === 'addProperties') {\n-      Object.assign(stateClone, action.extraData);\n-      history.push({ ...stateClone });\n-    } else if (action.type === 'removeProperties') {\n-      for (const key of action.keysToRemove) {\n-        delete stateClone[key];\n-      }\n-      history.push({ ...stateClone });\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n-\n-      for (const key of keys) {\n-        delete stateClone[key];\n-      }\n-      history.push({ ...stateClone });\n-    }\n-  }\n-\n-  return history;\n-}\n-\n-module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-\n function transformStateWithClones(state, actions) {\n   const history = [];\n   const stateClone = Object.assign({}, state);\n \n"
                },
                {
                    "date": 1708357949407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,20 +10,20 @@\n function transformStateWithClones(state, actions) {\n   const history = [];\n   const stateClone = Object.assign({}, state);\n \n-  function iterate(arr) {\n+\n+\n+  for (const action of actions) {  function iterate(arr) {\n     for (const key of arr) {\n       delete stateClone[key];\n     }\n   }\n-\n-  for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n     } else if (action.type === 'removeProperties') {\n-      iterate(stateClone);\n+      iterate(action.keysToRemove);\n       history.push({ ...stateClone });\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n"
                },
                {
                    "date": 1708365828554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,25 +10,25 @@\n function transformStateWithClones(state, actions) {\n   const history = [];\n   const stateClone = Object.assign({}, state);\n \n-\n-\n-  for (const action of actions) {  function iterate(arr) {\n+  function delete(arr) {\n     for (const key of arr) {\n       delete stateClone[key];\n     }\n   }\n+\n+  for (const action of actions) {\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n     } else if (action.type === 'removeProperties') {\n-      iterate(action.keysToRemove);\n+      delete(action.keysToRemove);\n       history.push({ ...stateClone });\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n-      iterate(keys);\n+      delete(keys);\n       history.push({ ...stateClone });\n     }\n   }\n \n"
                },
                {
                    "date": 1708365833755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n function transformStateWithClones(state, actions) {\n   const history = [];\n   const stateClone = Object.assign({}, state);\n \n-  function delete(arr) {\n+  function deleteKeysFromObj(arr) {\n     for (const key of arr) {\n       delete stateClone[key];\n     }\n   }\n@@ -21,14 +21,14 @@\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n     } else if (action.type === 'removeProperties') {\n-      delete(action.keysToRemove);\n+      deleteKeysFromObj(action.keysToRemove);\n       history.push({ ...stateClone });\n     } else if (action.type === 'clear') {\n       const keys = Object.keys(stateClone);\n \n-      delete(keys);\n+      deleteKeysFromObj(keys);\n       history.push({ ...stateClone });\n     }\n   }\n \n"
                },
                {
                    "date": 1708365972215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n     }\n   }\n \n   for (const action of actions) {\n+    switch\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n     } else if (action.type === 'removeProperties') {\n"
                },
                {
                    "date": 1708365987333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+\n+function transformStateWithClones(state, actions) {\n+  const history = [];\n+  const stateClone = Object.assign({}, state);\n+\n+  function deleteKeysFromObj(arr) {\n+    for (const key of arr) {\n+      delete stateClone[key];\n+    }\n+  }\n+\n+  for (const action of actions) {\n+    switch(action.type)\n+    if (action.type === 'addProperties') {\n+      Object.assign(stateClone, action.extraData);\n+      history.push({ ...stateClone });\n+    } else if (action.type === 'removeProperties') {\n+      deleteKeysFromObj(action.keysToRemove);\n+      history.push({ ...stateClone });\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(stateClone);\n+\n+      deleteKeysFromObj(keys);\n+      history.push({ ...stateClone });\n+    }\n+  }\n+\n+  return history;\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708365999802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,48 +17,11 @@\n     }\n   }\n \n   for (const action of actions) {\n-    switch(action.type)\n-    if (action.type === 'addProperties') {\n-      Object.assign(stateClone, action.extraData);\n-      history.push({ ...stateClone });\n-    } else if (action.type === 'removeProperties') {\n-      deleteKeysFromObj(action.keysToRemove);\n-      history.push({ ...stateClone });\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n-\n-      deleteKeysFromObj(keys);\n-      history.push({ ...stateClone });\n+    switch(action.type) {\n+      case 'addProperties'\n     }\n-  }\n-\n-  return history;\n-}\n-\n-module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-\n-function transformStateWithClones(state, actions) {\n-  const history = [];\n-  const stateClone = Object.assign({}, state);\n-\n-  function deleteKeysFromObj(arr) {\n-    for (const key of arr) {\n-      delete stateClone[key];\n-    }\n-  }\n-\n-  for (const action of actions) {\n-    switch\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n     } else if (action.type === 'removeProperties') {\n"
                },
                {
                    "date": 1708366006004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n   }\n \n   for (const action of actions) {\n     switch(action.type) {\n-      case 'addProperties'\n+      case 'addProperties':\n+        \n     }\n     if (action.type === 'addProperties') {\n       Object.assign(stateClone, action.extraData);\n       history.push({ ...stateClone });\n"
                },
                {
                    "date": 1708366018258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,13 @@\n \n   for (const action of actions) {\n     switch(action.type) {\n       case 'addProperties':\n-        \n+        Object.assign(stateClone, action.extraData);\n+      history.push({ ...stateClone });\n     }\n     if (action.type === 'addProperties') {\n-      Object.assign(stateClone, action.extraData);\n-      history.push({ ...stateClone });\n+\n     } else if (action.type === 'removeProperties') {\n       deleteKeysFromObj(action.keysToRemove);\n       history.push({ ...stateClone });\n     } else if (action.type === 'clear') {\n"
                },
                {
                    "date": 1708366023556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+\n+function transformStateWithClones(state, actions) {\n+  const history = [];\n+  const stateClone = Object.assign({}, state);\n+\n+  function deleteKeysFromObj(arr) {\n+    for (const key of arr) {\n+      delete stateClone[key];\n+    }\n+  }\n+\n+  for (const action of actions) {\n+    switch(action.type) {\n+      case 'addProperties':\n+        Object.assign(stateClone, action.extraData);\n+       history.push({ ...stateClone });\n+    }\n+    if (action.type === 'addProperties') {\n+\n+    } else if (action.type === 'removeProperties') {\n+      deleteKeysFromObj(action.keysToRemove);\n+      history.push({ ...stateClone });\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(stateClone);\n+\n+      deleteKeysFromObj(keys);\n+      history.push({ ...stateClone });\n+    }\n+  }\n+\n+  return history;\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708366034546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,10 @@\n   for (const action of actions) {\n     switch(action.type) {\n       case 'addProperties':\n         Object.assign(stateClone, action.extraData);\n-       history.push({ ...stateClone });\n+        history.push({ ...stateClone });\n+        break;\n     }\n     if (action.type === 'addProperties') {\n \n     } else if (action.type === 'removeProperties') {\n@@ -39,46 +40,4 @@\n   return history;\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-\n-function transformStateWithClones(state, actions) {\n-  const history = [];\n-  const stateClone = Object.assign({}, state);\n-\n-  function deleteKeysFromObj(arr) {\n-    for (const key of arr) {\n-      delete stateClone[key];\n-    }\n-  }\n-\n-  for (const action of actions) {\n-    switch(action.type) {\n-      case 'addProperties':\n-        Object.assign(stateClone, action.extraData);\n-      history.push({ ...stateClone });\n-    }\n-    if (action.type === 'addProperties') {\n-\n-    } else if (action.type === 'removeProperties') {\n-      deleteKeysFromObj(action.keysToRemove);\n-      history.push({ ...stateClone });\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n-\n-      deleteKeysFromObj(keys);\n-      history.push({ ...stateClone });\n-    }\n-  }\n-\n-  return history;\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708366045562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n       case 'addProperties':\n         Object.assign(stateClone, action.extraData);\n         history.push({ ...stateClone });\n         break;\n+      case 'removeProperties'\n     }\n     if (action.type === 'addProperties') {\n \n     } else if (action.type === 'removeProperties') {\n"
                },
                {
                    "date": 1708366054685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,11 @@\n       case 'addProperties':\n         Object.assign(stateClone, action.extraData);\n         history.push({ ...stateClone });\n         break;\n-      case 'removeProperties'\n+      case 'removeProperties':\n+        deleteKeysFromObj(action.keysToRemove);\n+      history.push({ ...stateClone });\n     }\n     if (action.type === 'addProperties') {\n \n     } else if (action.type === 'removeProperties') {\n"
                },
                {
                    "date": 1708366063483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n         history.push({ ...stateClone });\n         break;\n       case 'removeProperties':\n         deleteKeysFromObj(action.keysToRemove);\n-      history.push({ ...stateClone });\n+        history.push({ ...stateClone });\n+        break;\n+      \n     }\n     if (action.type === 'addProperties') {\n \n     } else if (action.type === 'removeProperties') {\n"
                },
                {
                    "date": 1708366070485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,48 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+\n+function transformStateWithClones(state, actions) {\n+  const history = [];\n+  const stateClone = Object.assign({}, state);\n+\n+  function deleteKeysFromObj(arr) {\n+    for (const key of arr) {\n+      delete stateClone[key];\n+    }\n+  }\n+\n+  for (const action of actions) {\n+    switch(action.type) {\n+      case 'addProperties':\n+        Object.assign(stateClone, action.extraData);\n+        history.push({ ...stateClone });\n+        break;\n+      case 'removeProperties':\n+        deleteKeysFromObj(action.keysToRemove);\n+        history.push({ ...stateClone });\n+        break;\n+      case clear \n+    }\n+    if (action.type === 'addProperties') {\n+\n+    } else if (action.type === 'removeProperties') {\n+      deleteKeysFromObj(action.keysToRemove);\n+      history.push({ ...stateClone });\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(stateClone);\n+\n+      deleteKeysFromObj(keys);\n+      history.push({ ...stateClone });\n+    }\n+  }\n+\n+  return history;\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708366075835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       case 'removeProperties':\n         deleteKeysFromObj(action.keysToRemove);\n         history.push({ ...stateClone });\n         break;\n-      case clear \n+      case 'clear':\n     }\n     if (action.type === 'addProperties') {\n \n     } else if (action.type === 'removeProperties') {\n@@ -45,52 +45,4 @@\n   return history;\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-\n-function transformStateWithClones(state, actions) {\n-  const history = [];\n-  const stateClone = Object.assign({}, state);\n-\n-  function deleteKeysFromObj(arr) {\n-    for (const key of arr) {\n-      delete stateClone[key];\n-    }\n-  }\n-\n-  for (const action of actions) {\n-    switch(action.type) {\n-      case 'addProperties':\n-        Object.assign(stateClone, action.extraData);\n-        history.push({ ...stateClone });\n-        break;\n-      case 'removeProperties':\n-        deleteKeysFromObj(action.keysToRemove);\n-        history.push({ ...stateClone });\n-        break;\n-      \n-    }\n-    if (action.type === 'addProperties') {\n-\n-    } else if (action.type === 'removeProperties') {\n-      deleteKeysFromObj(action.keysToRemove);\n-      history.push({ ...stateClone });\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n-\n-      deleteKeysFromObj(keys);\n-      history.push({ ...stateClone });\n-    }\n-  }\n-\n-  return history;\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708366083998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,52 @@\n+'use strict';\n+\n+/**\n+ * @param {Object} state\n+ * @param {Object[]} actions\n+ *\n+ * @return {Object[]}\n+ */\n+\n+function transformStateWithClones(state, actions) {\n+  const history = [];\n+  const stateClone = Object.assign({}, state);\n+\n+  function deleteKeysFromObj(arr) {\n+    for (const key of arr) {\n+      delete stateClone[key];\n+    }\n+  }\n+\n+  for (const action of actions) {\n+    switch(action.type) {\n+      case 'addProperties':\n+        Object.assign(stateClone, action.extraData);\n+        history.push({ ...stateClone });\n+        break;\n+      case 'removeProperties':\n+        deleteKeysFromObj(action.keysToRemove);\n+        history.push({ ...stateClone });\n+        break;\n+      case 'clear':\n+        const keys = Object.keys(stateClone);\n+\n+      deleteKeysFromObj(keys);\n+      history.push({ ...stateClone });\n+    }\n+    if (action.type === 'addProperties') {\n+\n+    } else if (action.type === 'removeProperties') {\n+      deleteKeysFromObj(action.keysToRemove);\n+      history.push({ ...stateClone });\n+    } else if (action.type === 'clear') {\n+      const keys = Object.keys(stateClone);\n+\n+      deleteKeysFromObj(keys);\n+      history.push({ ...stateClone });\n+    }\n+  }\n+\n+  return history;\n+}\n+\n+module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708366090541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,9 @@\n         history.push({ ...stateClone });\n         break;\n       case 'clear':\n         const keys = Object.keys(stateClone);\n-\n-      deleteKeysFromObj(keys);\n+        deleteKeysFromObj(keys);\n       history.push({ ...stateClone });\n     }\n     if (action.type === 'addProperties') {\n \n@@ -49,52 +48,4 @@\n   return history;\n }\n \n module.exports = transformStateWithClones;\n-'use strict';\n-\n-/**\n- * @param {Object} state\n- * @param {Object[]} actions\n- *\n- * @return {Object[]}\n- */\n-\n-function transformStateWithClones(state, actions) {\n-  const history = [];\n-  const stateClone = Object.assign({}, state);\n-\n-  function deleteKeysFromObj(arr) {\n-    for (const key of arr) {\n-      delete stateClone[key];\n-    }\n-  }\n-\n-  for (const action of actions) {\n-    switch(action.type) {\n-      case 'addProperties':\n-        Object.assign(stateClone, action.extraData);\n-        history.push({ ...stateClone });\n-        break;\n-      case 'removeProperties':\n-        deleteKeysFromObj(action.keysToRemove);\n-        history.push({ ...stateClone });\n-        break;\n-      case 'clear':\n-    }\n-    if (action.type === 'addProperties') {\n-\n-    } else if (action.type === 'removeProperties') {\n-      deleteKeysFromObj(action.keysToRemove);\n-      history.push({ ...stateClone });\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n-\n-      deleteKeysFromObj(keys);\n-      history.push({ ...stateClone });\n-    }\n-  }\n-\n-  return history;\n-}\n-\n-module.exports = transformStateWithClones;\n"
                },
                {
                    "date": 1708366097209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,21 +29,21 @@\n         break;\n       case 'clear':\n         const keys = Object.keys(stateClone);\n         deleteKeysFromObj(keys);\n-      history.push({ ...stateClone });\n+        history.push({ ...stateClone });\n     }\n-    if (action.type === 'addProperties') {\n+    // if (action.type === 'addProperties') {\n \n-    } else if (action.type === 'removeProperties') {\n-      deleteKeysFromObj(action.keysToRemove);\n-      history.push({ ...stateClone });\n-    } else if (action.type === 'clear') {\n-      const keys = Object.keys(stateClone);\n+    // } else if (action.type === 'removeProperties') {\n+    //   deleteKeysFromObj(action.keysToRemove);\n+    //   history.push({ ...stateClone });\n+    // } else if (action.type === 'clear') {\n+    //   const keys = Object.keys(stateClone);\n \n-      deleteKeysFromObj(keys);\n-      history.push({ ...stateClone });\n-    }\n+    //   deleteKeysFromObj(keys);\n+    //   history.push({ ...stateClone });\n+    // }\n   }\n \n   return history;\n }\n"
                },
                {
                    "date": 1708366126704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     }\n   }\n \n   for (const action of actions) {\n-    switch(action.type) {\n+    switch (action.type) {\n       case 'addProperties':\n         Object.assign(stateClone, action.extraData);\n         history.push({ ...stateClone });\n         break;\n@@ -28,22 +28,12 @@\n         history.push({ ...stateClone });\n         break;\n       case 'clear':\n         const keys = Object.keys(stateClone);\n+\n         deleteKeysFromObj(keys);\n         history.push({ ...stateClone });\n     }\n-    // if (action.type === 'addProperties') {\n-\n-    // } else if (action.type === 'removeProperties') {\n-    //   deleteKeysFromObj(action.keysToRemove);\n-    //   history.push({ ...stateClone });\n-    // } else if (action.type === 'clear') {\n-    //   const keys = Object.keys(stateClone);\n-\n-    //   deleteKeysFromObj(keys);\n-    //   history.push({ ...stateClone });\n-    // }\n   }\n \n   return history;\n }\n"
                },
                {
                    "date": 1708366188023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,9 @@\n         const keys = Object.keys(stateClone);\n \n         deleteKeysFromObj(keys);\n         history.push({ ...stateClone });\n+      default: \n     }\n   }\n \n   return history;\n"
                },
                {
                    "date": 1708366196126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,10 @@\n         const keys = Object.keys(stateClone);\n \n         deleteKeysFromObj(keys);\n         history.push({ ...stateClone });\n-      default: \n+      default:\n+      throw Error \"\"\n     }\n   }\n \n   return history;\n"
                },
                {
                    "date": 1708366231598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n \n         deleteKeysFromObj(keys);\n         history.push({ ...stateClone });\n       default:\n-      throw Error \"\"\n+      throw Error (\"Error\"\n     }\n   }\n \n   return history;\n"
                },
                {
                    "date": 1708366237472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n \n         deleteKeysFromObj(keys);\n         history.push({ ...stateClone });\n       default:\n-      throw Error (\"Error\")\n+      throw Error(\"Error\")\n     }\n   }\n \n   return history;\n"
                }
            ],
            "date": 1708343162693,
            "name": "Commit-0",
            "content": "'use strict';\n\n/**\n * @param {Object} state\n * @param {Object[]} actions\n *\n * @return {Object[]}\n */\nfunction transformState(state, actions) {\n  for (const action of actions) {\n    if (action.type === 'addProperties') {\n      Object.assign(state, action.extraData);\n    } else if (action.type === 'removeProperties') {\n      for (const key of action.keysToRemove) {\n        delete state[key];\n      }\n    } else if (action.type === 'clear') {\n      state = {};\n    }\n  }\n}\n\nmodule.exports = transformStateWithClones;\n"
        }
    ]
}